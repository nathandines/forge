---
defaults: &defaults
  working_directory: /go/src/github.com/nathandines/stack
  docker:
    - image: circleci/golang:latest

version: 2
jobs:
  build:
    <<: *defaults
    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout

      - run: mkdir -p "$TEST_RESULTS"
      - run: go get github.com/jstemmer/go-junit-report

      - run: make deps
      - run: |
          trap 'go-junit-report <"${TEST_RESULTS}/go-test.out" > "${TEST_RESULTS}/go-test-report.xml"' EXIT
          make test | tee "${TEST_RESULTS}/go-test.out"
      - run: make

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results

      - persist_to_workspace:
          root: bin
          paths:
            - '*'

  release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: bin

      - run:
          name: Validate Tag Version
          command: |
            stack_version="$(./bin/stack --version | grep -Po 'v\d+(?:\.\d+){2}(?:-[a-z]+\d?)?$')"
            tag_version="$(git tag --points-at | grep -P '^v\d+(?:\.\d+){2}(?:-[a-z]+\d?)?$')"
            if [[ "$tag_version" != "$stack_version" ]]; then
              echo "Tag version ${tag_version} does not match binary version ${stack_version}"
              exit 1
            fi
            mkdir release
            echo "$tag_version" > version

      - run:
          name: Build - Linux (32-bit)
          environment:
            GOOS: linux
            GOARCH: '386'
          command: &build_cmd go build -v -o "release/stack_$(cat 'version')_${GOOS}_${GOARCH}"

      - run:
          name: Build - Linux (64-bit)
          environment:
            GOOS: linux
            GOARCH: amd64
          command: *build_cmd

      - run:
          name: Build - Windows (32-bit)
          environment:
            GOOS: windows
            GOARCH: '386'
          command: *build_cmd

      - run:
          name: Build - Windows (64-bit)
          environment:
            GOOS: windows
            GOARCH: amd64
          command: *build_cmd

      - run:
          name: Build - Darwin (32-bit)
          environment:
            GOOS: darwin
            GOARCH: '386'
          command: *build_cmd

      - run:
          name: Build - Darwin (64-bit)
          environment:
            GOOS: darwin
            GOARCH: amd64
          command: *build_cmd

      - run: go get github.com/tcnksm/ghr
      - run: |
          if (echo 'v1.0.0-alpha' | grep -Pq -- '-[a-z]+\d?$'); then
            PRERELEASE='-prerelease'
          fi
          ghr -u nathandines "$PRERELEASE" "$(cat version)" release

workflows:
  version: 2
  build-n-release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters:
            tags:
              only: /^v\d+(?:\.\d+){2}(?:-[a-z]+\d?)?$/
            branches:
              ignore: /.*/
